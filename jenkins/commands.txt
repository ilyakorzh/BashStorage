"install git":

1) sudo apt-get install -y git


"add Jenkins repo & install & upgrade":
wget -q -O - https://jenkins-ci.org/debian/jenkins-ci.org.key | sudo apt-key add -
sh -c 'echo deb http://pkg.jenkins-ci.org/debian binary/ >> /etc/apt/sources.list.d'
apt-get update
apt-get install jenkins


"load jenkins-cli":

wget http://localhost:8084/jnlpJars/jenkins-cli.jar 


"enumerate plugins":

java -jar jenkins-cli.jar -s http://127.0.0.1:8080/ list-plugins

#or

java -jar jenkins-cli.jar -s http://127.0.0.1:8084 groovy = < pluginEnumerator.groovy > log.txt


script "pluginEnumerator.groovy"

println "Running plugin enumerator"
println ""
def plugins = jenkins.model.Jenkins.instance.getPluginManager().getPlugins()
plugins.each {println "${it.getShortName()} - ${it.getVersion()}"}
println ""
println "Total number of plugins: ${plugins.size()}"


"safe-restart":

java -jar jenkins-cli.jar -s http://localhost:8080 safe-restart


"install plugins":

java -jar jenkins-cli.jar -s http://localhost:8080 install-plugin <name>


generate ssh key for GitHub:
1) ssh-keygen -t rsa -b 4096 -C "ilya.korzh@ardas.dp.ua"
2) ssh-add ~/.ssh/id_rsa  #add key to key storage  
3) cat ~/.ssh/id_rsa      #copy private key from terminal
4) cat ~/.ssh/id_rsa.pub  #copy public key from terminal
5) add key to new SSH key to https://github.com/settings/ssh
6) ssh -T git@github.com  #check connectivity with GitHub over new keys


"add new plugins":

Log Parser Plugin
ThinBackup
Job Config History Plugin
Publish Over SSH
Kubernetes plugin	
Docker Commons Plugin
Docker plugin
CloudBees Docker Workflow
Docker build step plugin
CloudBees Docker Build and Publish plugin
Amazon Web Services SDK	
Amazon EC2 Container Service plugin


"list plugins":

parameterized-trigger - 2.29
build-flow-extensions-plugin - 0.1.1
translation - 1.12
github-api - 1.69
gradle - 1.24
workflow-step-api - 1.10.1
antisamy-markup-formatter - 1.3
matrix-auth - 1.2
javadoc - 1.3
buildgraph-view - 1.1.1
email-ext - 2.40.5
git-client - 1.19.0
mapdb-api - 1.0.6.0
plain-credentials - 1.1
mailer - 1.16
ldap - 1.11
scm-api - 0.2
build-timeout - 1.15
script-security - 1.15
token-macro - 1.11
maven-plugin - 2.12.1
credentials - 1.24
pam-auth - 1.2
subversion - 2.5.3
cvs - 2.12
email-ext-recipients-column - 1.0
matrix-project - 1.6
ghprb - 1.29.2
github - 1.14.0
ssh-slaves - 1.10
build-flow-plugin - 0.18
windows-slaves - 1.1
junit - 1.9
nodejs - 0.2.1
ssh-credentials - 1.11
external-monitor-job - 1.4
ssh-agent - 1.8
ant - 1.2
git - 2.4.0


"fix Java8_66-b17 for update Jenkins (https://issues.jenkins-ci.org/browse/JENKINS-31089)":
cd /usr/lib/jvm/java-8-oracle/jre/lib/security

grep -n "jdk.certpath.disabledAlgorithms=MD2, RSA keySize < 1024" java.security

sed -i -e 's/jdk.certpath.disabledAlgorithms=MD2, RSA keySize < 1024/jdk.certpath.disabledAlgorithms=MD2, RSA keySize < 512/g' java.security

service jenkins restart


"regular salt provision":

sudo salt-call --local state.highstate -l debug


"Maven add repo"
nano $JENKINS_HOME/tools/hudson.model.MavenInstallation/$ettings.xml
   <server>
      <id>URLtoRepo</id>
      <username>repouser</username>
      <password>repopwd</password>
    </server>

#check repo
mvn archetype:create -DarchetypeGroupId=org.apache.maven.archetypes -DarchetypeArtifactId=maven-archetype-webapp -DgroupId=nl.iteye -DartifactId=App1 

cd App1


"backup":

/opt/backups
set 'write group' & 'write others' permissions


"create folder for scripts (synced)":
/usr/scripts/cityodds
copy and chmod +x all scripts:
cx-run-amazon-env-kaizen.sh
publish_cityodds_users.sh
ws-tests.sh


"create folder for artifacts Users":
mkdir /var/lib/hudson 
chmod 40777 /var/lib/hudson

"change scripts":
ws-tests.sh

#before 
workspace=/var/lib/hudson/jobs/$1/workspace

#after
workspace=/var/lib/jenkins/jobs/$1/workspace


#create folder for deploy Selenium test to Jenkins host\
mkdir /var/www/html/ws-test-reports-payapi

chmod 777 -r /var/www/html/ws-test-reports-payapi

# modify /etc/apache2/conf.d/hudson.conf
ProxyPass /ws-test-reports-payapi !
Alias /ws-test-reports-payapi /var/www/html/ws-test-reports-payapi


#create folder for ssh-keys:
mkdir /var/lib/jenkins/ssh-keys/

#copy keys from old jenkins
scp -r ikorzh@jenkins-cityodds:/var/lib/jenkins/jobs/ /home/aws/jobs/

#replace key path in all jobs
grep -rl 'key=/var/lib/jenkins' /home/aws/jobs/ | xargs sed -i 's/key=\/var\/lib\/jenkins/key=\/var\/lib\/jenkins\/ssh-keys/g'


#NodeJS
curl -sL https://deb.nodesource.com/setup | bash -
apt-get install -y nodejs
apt-get install -y build-essential
npm install -g node-gyp
npm install -g gulp

#fix nodejs jobs Error: Module did not self-register.
apt-get purge nodejs
apt-get install -y nodejs
#rubn Jenkins job


#Maven jobs with docker:
clean install -Pdocker -Ddocker.image.tag=$RELEASE_VERSION -DpushImage=true


# manual start docker 
docker -H tcp://0.0.0.0:4243 -d

# for use Docker command need export DOCKER_HOST
export DOCKER_HOST=tcp://localhost:4243

# Variables for Jenkins jobs
echo RELEASE_VERSION=`date +"%Y%m%d"`-r$BUILD_NUMBER

vim /etc/systemd/system/multi-user.target.wants/docker.service

#ExecStart=/usr/bin/docker daemon -H fd://
ExecStart=/usr/bin/docker daemon -H tcp://0.0.0.0:4243

service docker start

# maven skip tests for test docker publish to registry
clean install  -Pdocker -Dmaven.test.skip=true -Ddocker.image.tag=$RELEASE_VERSION -DpushImage=true

# Save Docker Hub registry creds
cp /home/user/.docker/config.json /var/lib/jenkins/.docker/config.json
su jenkins
export DOCKER_HOST=tcp://localhost:4243
docker login <username>


#convert Amazon ws keys to private
puttygen ilyakorzh_public.pem -O private-openssh -o ilyakorzh_private.ppk

#Vagrant for AWS
export NOKOGIRI_USE_SYSTEM_LIBRARIES=true
apt-get install libxslt-dev libxml2-dev build-essential
vagrant plugin install vagrant-aws

#Vargant with Salt
vagrant plugin install vagrant-salt

#Vagrant run AWS
vagrant up --provider=aws

# Deb 7.8 SALT prereq.

wget -q -O- "http://debian.saltstack.com/debian-salt-team-joehealy.gpg.key" | apt-key add -

echo "deb http://debian.saltstack.com/debian wheezy-saltstack main" >> /etc/apt/sources.list

apt-get update

salt.bootstrap_options = "-D -c /tmp"

#Add key for Common.sh 
/var/lib/jenkins/id_rsa_cityodds_test
# add host for test to known host list
/.ssh/known_hosts
# after copy set chmod 444 on key (read to all)
chmod 444 /var/lib/jenkins/id_rsa_cityodds_test